image: docker:18.09.7

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  image_branch: $registry/$CI_PROJECT_NAME:$CI_BUILD_REF_NAME
  image_latest: $registry/$CI_PROJECT_NAME:latest
  image_master: $registry/$CI_PROJECT_NAME:master
  image_pipeline: $registry/$CI_PROJECT_NAME:$CI_PIPELINE_ID
  image_tag: $registry/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  image_quay_tag: quay.io/basis-company/skeleton:$CI_COMMIT_TAG
  image_quay_latest: quay.io/basis-company/skeleton:latest

stages:
  - build
  - test
  - release

build-image:
  stage: build
  services:
    - name: docker:18.09.7-dind
  script:
    - cat $registrykey | docker login --username json_key --password-stdin cr.yandex
    - docker pull $image_branch || true
    - >
      echo "<?php return ['tag'=>'$CI_COMMIT_TAG','sha'=>'$CI_COMMIT_SHA','short_sha'=>'$CI_COMMIT_SHORT_SHA','ref_name'=>'$CI_COMMIT_REF_NAME'];" > version.php
    - docker build -f skeleton/Dockerfile --cache-from $image_branch -t $image_pipeline .
    - docker push $image_pipeline

test-phpsyntax:
  stage: test
  image: $image_pipeline
  allow_failure: false
  interruptible: true
  script:
    - cd /var/www/html/php
    - find . -type f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors detected" )
    - if [ "$?" -ne "0" ];then exit 1; fi

test-phpcs:
  stage: test
  image: $image_pipeline
  allow_failure: false
  interruptible: true
  script:
    - curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
    - chmod +x phpcs.phar
    - curl -o phpcs.xml https://wfm.basis.services/linter/php
    - ./phpcs.phar php --standard=phpcs.xml

test-phpunit:
  stage: test
  image: php:8-cli

  services:
    - name: tarantool/tarantool:2.6.2
      alias: test-db
    - name: cr.yandex/crpf255p88b3bourvm4f/data
      alias: test-data
      variables:
        CARTRIDGE_MODE: single
        CLUSTER_COOKIE: password
    - name: yandex/clickhouse-server
      alias: test-ch

  only:
    - test
    - master

  variables:
    TARANTOOL_CONNECTION: tcp://test-db:3301
    DATA_CONNECTION: tcp://test-data:3301

  script:
    - apt-get update && apt-get install zip git -y
    - curl -sS https://getcomposer.org/installer | php && chmod +x composer.phar
    - ./composer.phar require phpunit/phpunit
    - vendor/bin/phpunit --coverage-clover=coverage.xml

test-coverage:
  stage: test
  image: php:8-cli
  allow_failure: true
  interruptible: true
  services:
    - name: tarantool/tarantool:2.6.2
      alias: test-db
    - name: cr.yandex/crpf255p88b3bourvm4f/data
      alias: test-data
      variables:
        CARTRIDGE_MODE: single
        CLUSTER_COOKIE: password
    - name: yandex/clickhouse-server
      alias: test-ch

  only:
    - test
    - master

  variables:
    TARANTOOL_CONNECTION: tcp://test-db:3301
    DATA_CONNECTION: tcp://test-data:3301
    XDEBUG_MODE: coverage

  script:
    - apt-get update && apt-get install zip git -y
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    - curl -sS https://getcomposer.org/installer | php && chmod +x composer.phar
    - ./composer.phar require phpunit/phpunit
    - vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-text --colors=never

release-branch:
  stage: release
  services:
    - name: docker:18.09.7-dind
  script:
    - export
    - cat $registrykey | docker login --username json_key --password-stdin cr.yandex
    - docker pull $image_pipeline
    - docker tag $image_pipeline $image_branch
    - docker push $image_branch

release-tag:
  stage: release
  only:
    - tags
  services:
    - name: docker:18.09.7-dind
  script:
    - export
    - cat $registrykey | docker login --username json_key --password-stdin cr.yandex
    - docker pull $image_pipeline
    - docker tag $image_pipeline $image_latest
    - docker tag $image_pipeline $image_master
    - docker tag $image_pipeline $image_tag
    - docker push $image_latest
    - docker push $image_master
    - docker push $image_tag

release-skeleton:
  stage: release
  only:
    - tags
  services:
    - name: docker:18.09.7-dind
  script:
    - export
    - cat $registrykey | docker login --username json_key --password-stdin cr.yandex
    - docker pull $image_pipeline
    - docker tag $image_pipeline $image_quay_tag
    - docker tag $image_pipeline $image_quay_latest
    - docker login -u="$quay_login" -p="$quay_password" quay.io
    - docker push $image_quay_tag
    - docker push $image_quay_latest
